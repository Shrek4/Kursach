using NUnit.Framework;
using WpfShrek.some_support;

namespace WpfShrek_Testing
{
    public class Cryptograph_Test
    {
        public static string inptxt = "бщцфаирщри, бл €чъбиуъ щбюэс€Єш гфуаа!!! \r\nу ъ€щэ€чэц ъэюоык, едщ бдв саэацкшгнб€р гчеа кчфцшубп цу ьгщп€ вщвс€щ, эвэчрысй ю€уъщнщхо шпуъликугбз чъцшь€ с цощъвчщ ъфмес ю лгюлэ Єъ€€р! с моы€щш шпмоец ща€рдш ц€эубфъ аьгэотызуа дщ, щръ кй юцкъщчьуац уыхэцэ €сч юбю€у€г ыовзсгюамщщ.внютвж тхыч э€дкъ€бе цн юкъль, мэсццогл ш€ьфыоэьь ть эщсщжнашанэ ыюцен, уЄю€ыцчан мах гъъьуун шпмоыъй ч €€ьпщъхэтпык €ущм бпйэае!чэьюмуд, оээ скфч саьбрвчЄыа э€дуцйт ъ уьгфщу€€Єу фси а эацэтшцэч юпапЄи, ьь уъубфмч ысь хффы ужц чь€цнааущ эгъщйаъф, ч п эиттпьк €рвчг гмубзньцы!щб ьш€о шачюрэсч FirstLineSoftware ц ешчтфщацдпбр шыыь, р ыоф €чцсвкрщве бттй а €дсецсцкюкх эшашЄрэсуъ €кжще увюгщр в# уфн ысвчюпжзцж! чй Єюычъ бщххыибй еьюхечр п хкъмэншЄцч ю€тщвфцшчщ с хчю ъэ ч аачсюсчыщачрн€ун в шъюьэжц€сиьццч агфуо ацаь€ычсцы .Net, чэбф ыуюбпьщо с чыдп€хбцйг щктрж!";
        public static string inpword = "бщцфаирщри, бл €чъбиуъ щбюэс€Єш гфуаа!!! \rу ъ€щэ€чэц ъэюоык, едщ бдв саэацкшгнб€р гчеа кчфцшубп цу ьгщп€ вщвс€щ, эвэчрысй ю€уъщнщхо шпуъликугбз чъцшь€ с цощъвчщ ъфмес ю лгюлэ Єъ€€р! с моы€щш шпмоец ща€рдш ц€эубфъ аьгэотызуа дщ, щръ кй юцкъщчьуац уыхэцэ €сч юбю€у€г ыовзсгюамщщ.внютвж тхыч э€дкъ€бе цн юкъль, мэсццогл ш€ьфыоэьь ть эщсщжнашанэ ыюцен, уЄю€ыцчан мах гъъьуун шпмоыъй ч €€ьпщъхэтпык €ущм бпйэае!чэьюмуд, оээ скфч саьбрвчЄыа э€дуцйт ъ уьгфщу€€Єу фси а эацэтшцэч юпапЄи, ьь уъубфмч ысь хффы ужц чь€цнааущ эгъщйаъф, ч п эиттпьк €рвчг гмубзньцы!щб ьш€о шачюрэсч FirstLineSoftware ц ешчтфщацдпбр шыыь, р ыоф €чцсвкрщве бттй а €дсецсцкюкх эшашЄрэсуъ €кжще увюгщр в# уфн ысвчюпжзцж! чй Єюычъ бщххыибй еьюхечр п хкъмэншЄцч ю€тщвфцшчщ с хчю ъэ ч аачсюсчыщачрн€ун в шъюьэжц€сиьццч агфуо ацаь€ычсцы .Net, чэбф ыуюбпьщо с чыдп€хбцйг щктрж!";
        public static string outptxt = "поздравл€ю, ты получил исходный текст!!! \rв принципе пон€ть, что тут используетс€ шифр виженера не особо трудно, основна€ подсказка заключаетс€ именно в наличии ключа у этого шифра! в данной задаче особый интерес составл€ет то, как вы реализуете именно сам процесс расшифровки.теперь дело осталось за малым, доделать программу до логического конца, выполнить все услови€ задани€ и опубликовать свою работу!молодец, это были достаточно трудные и интересные два с половиной мес€ца, но впереди нас ждет еще множество открытий, и € надеюсь общих свершений!от лица компании FirstLineSoftware и университета итмо, € рад поздравить теб€ с официальным окончанием наших курсов с# дл€ начинающих! мы хотим пожелать успехов в дальнейшем погружении в мир ит и программировани€ с использованием стека технологий .Net, море терпени€ и интересных задач!";
        public static string outpword = "поздравл€ю, ты получил исходный текст!!! \r\nв принципе пон€ть, что тут используетс€ шифр виженера не особо трудно, основна€ подсказка заключаетс€ именно в наличии ключа у этого шифра! в данной задаче особый интерес составл€ет то, как вы реализуете именно сам процесс расшифровки.теперь дело осталось за малым, доделать программу до логического конца, выполнить все услови€ задани€ и опубликовать свою работу!молодец, это были достаточно трудные и интересные два с половиной мес€ца, но впереди нас ждет еще множество открытий, и € надеюсь общих свершений!от лица компании FirstLineSoftware и университета итмо, € рад поздравить теб€ с официальным окончанием наших курсов с# дл€ начинающих! мы хотим пожелать успехов в дальнейшем погружении в мир ит и программировани€ с использованием стека технологий .Net, море терпени€ и интересных задач!";
        [SetUp]
        public void Setup()
        {
        }

        [Test]
        public void RightEncrypt()
        {
            if (Cryptograph.Encrypt(outpword, "скорпион") == inpword)
            if (Cryptograph.Encrypt(outptxt, "скорпион") == inptxt)
                Assert.Pass();
        }

        [Test]
        public void RightDecrypt()
        {
            if(Cryptograph.Decrypt(inptxt, "скорпион")== outptxt)
            if(Cryptograph.Decrypt(inpword, "скорпион")== outpword)
            Assert.Pass();
        }
    }
}